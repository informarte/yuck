package yuck.flatzinc.test.vrp

import java.io.File

import org.junit.*

import scala.jdk.CollectionConverters.*

import yuck.flatzinc.test.util.*
import yuck.test.util.ParallelParameterizedTestRunner

/**
 * Runs the Homberger CVRPTW benchmark
 *
 * @author Michael Marte
 */
@Test
@FixMethodOrder(runners.MethodSorters.NAME_ASCENDING)
@runner.RunWith(classOf[ParallelParameterizedTestRunner])
final class HombergerBenchmark(task: MiniZincTestTask) extends MiniZincBasedTest {

    @Test
    def solve(): Unit = {
        super.solve(task.copy(dataAssignments = Map(("MaxKToMinKRatio", "4")), maybeMaximumNumberOfThreads = Some(1), keepFlatZincFile = false))
    }

}

/**
 * Generates test tasks from the Homberger CVRPTW benchmark instances
 *
 * @author Michael Marte
 */
object HombergerBenchmark extends VrpTestTaskFactory {

    override protected def modelFilter(file: File) = List("cvrptw_yuck.mzn").contains(file.getName)

    override protected def instanceFilter(file: File) = super.instanceFilter(file) && file.getPath.contains("Homberger")

    override protected val Results = Map(
        ("C1_2_1.200.20", 2704559), ("C1_2_2.200.18", 2917885), ("C1_2_3.200.18", 2707338),
        ("C1_2_4.200.18", 2643300), ("C1_2_5.200.20", 2702041), ("C1_2_6.200.20", 2701028),
        ("C1_2_7.200.20", 2701028), ("C1_2_8.200.19", 2775472), ("C1_2_9.200.18", 2687822),
        ("C1_2_10.200.18", 2643544), ("C2_2_1.200.6", 1931436), ("C2_2_2.200.6", 1863150),
        ("C2_2_3.200.6", 1775071), ("C2_2_4.200.6", 1703427), ("C2_2_5.200.6", 1878845),
        ("C2_2_6.200.6", 1857350), ("C2_2_7.200.6", 1849454), ("C2_2_8.200.6", 1820530),
        ("C2_2_9.200.6", 1830047), ("C2_2_10.200.6", 1806575), ("R1_2_1.200.20", 4784110),
        ("R1_2_2.200.18", 4039865), ("R1_2_3.200.18", 3381956), ("R1_2_4.200.18", 3057815),
        ("R1_2_5.200.18", 4107858), ("R1_2_6.200.18", 3583149), ("R1_2_7.200.18", 33150119),
        ("R1_2_8.200.18", 2951920), ("R1_2_9.200.18", 3760589), ("R1_2_10.200.18", 3310099),
        ("R2_2_1.200.4", 4483157), ("R2_2_2.200.4", 3621195), ("R2_2_3.200.4", 2880613),
        ("R2_2_4.200.4", 1981296), ("R2_2_5.200.4", 3366786), ("R2_2_6.200.4", 2913026),
        ("R2_2_7.200.4", 2464931), ("R2_2_8.200.4", 1849864), ("R2_2_9.200.4", 3092035),
        ("R2_2_10.200.4", 2654970), ("RC1_2_1.200.18", 3602800), ("RC1_2_2.200.18", 3249055),
        ("RC1_2_3.200.18", 3008325), ("RC1_2_4.200.18", 2851676), ("RC1_2_5.200.18", 3371005),
        ("RC1_2_6.200.18", 3324800), ("RC1_2_7.200.18", 3190419), ("RC1_2_8.200.18", 3083929),
        ("RC1_2_9.200.18", 3102251), ("RC1_2_10.200.18", 3000305), ("RC2_2_1.200.6", 3099530),
        ("RC2_2_2.200.5", 2825244), ("RC2_2_3.200.4", 2601876), ("RC2_2_4.200.4", 2038553),
        ("RC2_2_5.200.4", 2911454), ("RC2_2_6.200.4", 2873114), ("RC2_2_7.200.4", 2525820),
        ("RC2_2_8.200.4", 2292533), ("RC2_2_9.200.4", 2175039), ("RC2_2_10.200.4", 2015609),
        ("C1_4_1.400.40", 7152040), ("C1_4_2.400.36", 7686385), ("C1_4_3.400.36", 7060675),
        ("C1_4_4.400.36", 6803126), ("C1_4_5.400.40", 7152040), ("C1_4_6.400.40", 7153438),
        ("C1_4_7.400.39", 7417903), ("C1_4_8.400.37", 7347235), ("C1_4_9.400.36", 7042535),
        ("C1_4_10.400.36", 6860635), ("C2_4_1.400.12", 4116127), ("C2_4_2.400.12", 3930038),
        ("C2_4_3.400.11", 4018025), ("C2_4_4.400.11", 3702495), ("C2_4_5.400.12", 3938683),
        ("C2_4_6.400.12", 3875927), ("C2_4_7.400.12", 3894147), ("C2_4_8.400.11", 4301736),
        ("C2_4_9.400.12", 3864685), ("C2_4_10.400.11", 3827155), ("R1_4_1.400.40", 10372315),
        ("R1_4_2.400.36", 8923505), ("R1_4_3.400.36", 7819095), ("R1_4_4.400.36", 7282785),
        ("R1_4_5.400.36", 9226215), ("R1_4_6.400.36", 8372915), ("R1_4_7.400.36", 7619045),
        ("R1_4_8.400.36", 7263075), ("R1_4_9.400.36", 8717265), ("R1_4_10.400.36", 8107825),
        ("R2_4_1.400.8", 9209959), ("R2_4_2.400.8", 7606752), ("R2_4_3.400.8", 5911075),
        ("R2_4_4.400.8", 4241459), ("R2_4_5.400.8", 7128935), ("R2_4_6.400.8", 6122596),
        ("R2_4_7.400.8", 5018535), ("R2_4_8.400.8", 4015586), ("R2_4_9.400.8", 6400105),
        ("R2_4_10.400.8", 5791795), ("RC1_4_1.400.36", 8573965), ("RC1_4_2.400.36", 7898975),
        ("RC1_4_3.400.36", 7537475), ("RC1_4_4.400.36", 7308555), ("RC1_4_5.400.36", 8182045),
        ("RC1_4_6.400.36", 8177465), ("RC1_4_7.400.36", 7953495), ("RC1_4_8.400.36", 7760235),
        ("RC1_4_9.400.36", 7751635), ("RC1_4_10.400.36", 7601205), ("RC2_4_1.400.11", 6682375),
        ("RC2_4_2.400.9", 6180625), ("RC2_4_3.400.8", 4930832), ("RC2_4_4.400.8", 3631015),
        ("RC2_4_5.400.8", 6710118), ("RC2_4_6.400.8", 5766603), ("RC2_4_7.400.8", 5336585),
        ("RC2_4_8.400.8", 4793065), ("RC2_4_9.400.8", 4551798), ("RC2_4_10.400.8", 4278615),
        ("C1_6_1.600.60", 14095475), ("C1_6_2.600.56", 14163125), ("C1_6_3.600.56", 13777632),
        ("C1_6_4.600.56", 13558545), ("C1_6_5.600.60", 14085551), ("C1_6_6.600.59", 15847615),
        ("C1_6_7.600.57", 15752955), ("C1_6_8.600.56", 14402595), ("C1_6_9.600.56", 13693425),
        ("C1_6_10.600.56", 13637345), ("C2_6_1.600.18", 7773953), ("C2_6_2.600.17", 8264915),
        ("C2_6_3.600.17", 7523125), ("C2_6_4.600.17", 6909585), ("C2_6_5.600.18", 7574997),
        ("C2_6_6.600.18", 7470365), ("C2_6_7.600.18", 7511866), ("C2_6_8.600.17", 7539735),
        ("C2_6_9.600.17", 7941575), ("C2_6_10.600.17", 7255695), ("R1_6_1.600.59", 21131095),
        ("R1_6_2.600.54", 18750305), ("R1_6_3.600.54", 16956435), ("R1_6_4.600.54", 15772645),
        ("R1_6_5.600.54", 19588895), ("R1_6_6.600.54", 17871295), ("R1_6_7.600.54", 16555925),
        ("R1_6_8.600.54", 15636755), ("R1_6_9.600.54", 18669755), ("R1_6_10.600.54", 17748835),
        ("R2_6_1.600.11", 18206805), ("R2_6_2.600.11", 14779265), ("R2_6_3.600.11", 11191015),
        ("R2_6_4.600.11", 8029375), ("R2_6_5.600.11", 15096205), ("R2_6_6.600.11", 12503265),
        ("R2_6_7.600.11", 10066345), ("R2_6_8.600.11", 7574395), ("R2_6_9.600.11", 13377565),
        ("R2_6_10.600.11", 12253475), ("RC1_6_1.600.55", 17031335), ("RC1_6_2.600.55", 15920755),
        ("RC1_6_3.600.55", 15204645), ("RC1_6_4.600.55", 14777675), ("RC1_6_5.600.55", 16566245),
        ("RC1_6_6.600.55", 16504255), ("RC1_6_7.600.55", 16105685), ("RC1_6_8.600.55", 15914915),
        ("RC1_6_9.600.55", 15826245), ("RC1_6_10.600.55", 15675995), ("RC2_6_1.600.14", 13324705),
        ("RC2_6_2.600.12", 11555515), ("RC2_6_3.600.11", 9444995), ("RC2_6_4.600.11", 7076495),
        ("RC2_6_5.600.11", 13000845), ("RC2_6_6.600.11", 11933885), ("RC2_6_7.600.11", 10724855),
        ("RC2_6_8.600.11", 10007825), ("RC2_6_9.600.11", 9580875), ("RC2_6_10.600.11", 9069415),
        ("C1_8_1.800.80", 25030365), ("C1_8_2.800.72", 26752875), ("C1_8_3.800.72", 24257325),
        ("C1_8_4.800.72", 23824175), ("C1_8_5.800.80", 25166285), ("C1_8_6.800.79", 27202705),
        ("C1_8_7.800.77", 26486145), ("C1_8_8.800.73", 26684025), ("C1_8_9.800.72", 24335535),
        ("C1_8_10.800.72", 24070175), ("C2_8_1.800.24", 11654815), ("C2_8_2.800.23", 12286655),
        ("C2_8_3.800.23", 11410695), ("C2_8_4.800.22", 11154405), ("C2_8_5.800.24", 11425235),
        ("C2_8_6.800.23", 12551095), ("C2_8_7.800.24", 11370845), ("C2_8_8.800.23", 11288015),
        ("C2_8_9.800.23", 11605355), ("C2_8_10.800.23", 10977365), ("R1_8_1.800.80", 36852065),
        ("R1_8_2.800.72", 32532515), ("R1_8_3.800.72", 29414355), ("R1_8_4.800.72", 26838045),
        ("R1_8_5.800.72", 33789495), ("R1_8_6.800.72", 31037305), ("R1_8_7.800.72", 28913995),
        ("R1_8_8.800.72", 27730335), ("R1_8_9.800.72", 32386495), ("R1_8_10.800.72", 31086855),
        ("R2_8_1.800.15", 28114255), ("R2_8_2.800.15", 22795795), ("R2_8_3.800.15", 17714055),
        ("R2_8_4.800.15", 13206105), ("R2_8_5.800.15", 24285895), ("R2_8_6.800.15", 20479465),
        ("R2_8_7.800.15", 16677315), ("R2_8_8.800.15", 12645635), ("R2_8_9.800.15", 12645635),
        ("R2_8_10.800.15", 20401475), ("RC1_8_1.800.72", 31476875), ("RC1_8_2.800.72", 28924315),
        ("RC1_8_3.800.72", 27823265), ("RC1_8_4.800.72", 26784645), ("RC1_8_5.800.72", 30108645),
        ("RC1_8_6.800.72", 29994365), ("RC1_8_7.800.72", 29418425), ("RC1_8_8.800.72", 29010625),
        ("RC1_8_9.800.72", 28956055), ("RC1_8_10.800.72", 28631455), ("RC2_8_1.800.18", 20981145),
        ("RC2_8_2.800.16", 18181145), ("RC2_8_3.800.15", 14442405), ("RC2_8_4.800.15", 11006565),
        ("RC2_8_5.800.15", 19136035), ("RC2_8_6.800.15", 18146035), ("RC2_8_7.800.15", 16843965),
        ("RC2_8_8.800.15", 15799035), ("RC2_8_9.800.15", 15359995), ("RC2_8_10.800.15", 14439145),
        ("C1_10_1.1000.100", 42478910), ("C1_10_2.1000.90", 42247055), ("C1_10_3.1000.90", 40101365),
        ("C1_10_4.1000.90", 3946860), ("C1_10_5.1000.100", 42469185), ("C1_10_6.1000.99", 4383015),
        ("C1_10_7.1000.97", 43453925), ("C1_10_8.1000.92", 43029975), ("C1_10_9.1000.90", 40360335),
        ("C1_10_10.1000.90", 39858645), ("C2_10_1.1000.30", 16878904), ("C2_10_2.1000.29", 17126395),
        ("C2_10_3.1000.28", 16884085), ("C2_10_4.1000.28", 15656755), ("C2_10_5.1000.30", 16561295),
        ("C2_10_6.1000.29", 16920335), ("C2_10_7.1000.29", 17882425), ("C2_10_8.1000.28", 16577325),
        ("C2_10_9.1000.29", 16370445), ("C2_10_10.1000.28", 15943345), ("R1_10_1.1000.100", 53473265),
        ("R1_10_2.1000.91", 49085305), ("R1_10_3.1000.91", 45151685), ("R1_10_4.1000.91", 42729135),
        ("R1_10_5.1000.91", 51138275), ("R1_10_6.1000.91", 47636105), ("R1_10_7.1000.91", 44422345),
        ("R1_10_8.1000.91", 42485385), ("R1_10_9.1000.91", 49998005), ("R1_10_10.1000.91", 48131275),
        ("R2_10_1.1000.19", 42188865), ("R2_10_2.1000.19", 33459325), ("R2_10_3.1000.19", 24938955),
        ("R2_10_4.1000.19", 17880115), ("R2_10_5.1000.19", 36232185), ("R2_10_6.1000.19", 30073605),
        ("R2_10_7.1000.19", 23253895), ("R2_10_8.1000.19", 1749515), ("R2_10_9.1000.19", 33002365),
        ("R2_10_10.1000.19", 30215245), ("RC1_10_1.1000.90", 46138015), ("RC1_10_2.1000.90", 43972875),
        ("RC1_10_3.1000.90", 42360005), ("RC1_10_4.1000.90", 41526865), ("RC1_10_5.1000.90", 45344705),
        ("RC1_10_6.1000.90", 45110015), ("RC1_10_7.1000.90", 44686615), ("RC1_10_8.1000.90", 44075625),
        ("RC1_10_9.1000.90", 44069575), ("RC1_10_10.1000.90", 43771955), ("RC2_10_1.1000.20", 30278505),
        ("RC2_10_2.1000.18", 26327925), ("RC2_10_3.1000.18", 20010835), ("RC2_10_4.1000.18", 15741565),
        ("RC2_10_5.1000.18", 27140775), ("RC2_10_6.1000.18", 26797765), ("RC2_10_7.1000.18", 25112775),
        ("RC2_10_8.1000.18", 23709295), ("RC2_10_9.1000.18", 23028105), ("RC2_10_10.1000.18", 21910335))
        .map{case (instanceName, value) => ("Homberger/" + instanceName, ObjectiveValue(value, false))}

    // keep models aligned
    private def verifyAgainstCpModel(task: MiniZincTestTask) = task.copy(verificationModelName = "cvrptw_cp")

    @runners.Parameterized.Parameters(name = "{index}: {0}")
    def parameters = tasks.map(amendKnownBestResult).map(verifyAgainstCpModel).map(Array(_)).asJava

}
